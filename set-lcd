#!/bin/bash
if [ -z "$1" ]; then
    echo -e "\033[31m[Error]\033[0m"
    echo "please choose tft"
    exit 1
fi
if [ -z "$2" ]; then
    echo -e "\033[31m[Error]\033[0m"
    echo "please choose Function"
    exit 1
fi

TFT_NAME=$1


PATH_PWD="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH_TFT="${PATH_PWD}/tft"
PATH_CONF="${PATH_TFT}/conf"
PATH_DTB="${PATH_PWD}/dtb"
PATH_DRIVER="${PATH_TFT}/drivers"
PATH_DRIVER_SAVE="${PATH_PWD}/drivers-save/$(uname -r)"

source ${PATH_PWD}/common.sh
source ${PATH_TFT}/${TFT_NAME}/tft

Board_model="walnutpi-"
if [[ -f /proc/device-tree/model ]]; then
    Board_model=$(cat "/proc/device-tree/model")
fi


set -e

_enable_modules() {
    if [ ! -d $PATH_DRIVER_SAVE ]; then
        echo "compile drivers"
        make -C ${PATH_PWD}/drivers/
        make -C ${PATH_PWD}/drivers/ output
    fi
    cp -r $PATH_DRIVER_SAVE/* /lib/modules/$(uname -r)/kernel/drivers/
    
    echo -e "\nupdate system drivers...."
    depmod
    
    modules_file="/etc/modules"
    for module in ${TFT_MODULE[@]}
    do
        _file_insert $modules_file $module
    done
}
_disable_modules() {
    modules_file="/etc/modules"
    for module in ${TFT_MODULE[@]}
    do
        _file_delete $modules_file $module
    done
}

_enable_dtbo() {
    config_file="/boot/config.txt"

    if grep -q "^overlays=" "$config_file"; then
        if ! grep -q "^overlays=.*${TFT_DTS_NAME}" "$config_file"; then
            sed -i "s/^overlays=/&${TFT_DTS_NAME} /" "$config_file"
        fi
    else
        echo "overlays=${TFT_DTS_NAME}" >> "$config_file"
    fi
}
_disable_dtbo() {
    config_file="/boot/config.txt"
    sed -i "/^overlays=/ s/${TFT_DTS_NAME}//g" "$config_file"
}

# 更新设备树文件
_updoad_dtbo() {
    
    dts_files=$(find "$PATH_DTB" -type f -name "*${TFT_DTS_NAME}.dts")
    for dts_file in $dts_files; do
        dtbo_file="${dts_file%.dts}.dtbo"
        dtc -@  -I dts -O dtb -o "$dtbo_file" "$dts_file"
    done
    
    overlays_folder="/boot/overlays"
    dtb_files=$(find "$PATH_DTB" -type f -name "*${TFT_DTS_NAME}.dtbo")
    for file in $dtb_files; do
        cp "$file" "$overlays_folder"
    done
    
}

_dtb_replace() {
    local name=$1
    local value=$2
    
    local searchString="$name = <[0-9]*>"
    local replaceString="$name = <$value>"
    
    dts_files=$(find "$PATH_DTB" -type f -name "*${TFT_DTS_NAME}.dts")
    for dts_file in $dts_files; do
        dtbo_file="${dts_file%.dts}.dtbo"
        sed -i "s/$searchString/$replaceString/g" $dts_file
        dtc -@  -I dts -O dtb -o "$dtbo_file" "$dts_file"
    done
}

set_rotate_switch="0 90 180 270"
set_rotate() {
    OPT_operate=$1
    
    if [[ ! $set_rotate_switch =~ (^|[[:space:]])$OPT_operate($|[[:space:]]) ]]; then
        echo -e "\033[31m[Error]\033[0m"
        echo "error angle"
        exit 1
    fi
    
    if [ -d "/etc/X11/xorg.conf.d/" ]; then
        cp -rf "${PATH_CONF}/calibration.conf-${TFT_NAME}-${OPT_operate}"  /etc/X11/xorg.conf.d/99-calibration.conf
    fi
    
    _dtb_replace "rotate" $OPT_operate
    
    # if systemctl --quiet is-enabled fbcp.service
    # then
    #     case "$1" in
    #         0|180)
    #             _config_insert "hdmi_cvt" " $TFT_WIDTH $TFT_HIGHT 60 6 0 0 0"
    #         ;;
    #         90|270)
    #             _config_insert "hdmi_cvt" " $TFT_HIGHT $TFT_WIDTH 60 6 0 0 0"
    #         ;;
    #     esac
    # fi
    _updoad_dtbo
}

# -h() {
#     echo -e "${help_str}"
# }



_remove_desktop() {
    target_file="/usr/share/X11/xorg.conf.d/99-fbdev.conf"
    if [ -f "$target_file" ]; then
        rm -rf  $target_file
    fi
    target_file="/usr/share/X11/xorg.conf.d/45-evdev.conf"
    if [ -f "$target_file" ]; then
        rm -rf  $target_file
    fi
}


_run_set_device() {
    _try_command set-device disable spidev1_0
    _try_command set-device disable spidev1_1
}



install() {
    _run_set_device
    _enable_modules
    _enable_dtbo
    _add_flag
    _updoad_dtbo
    target_path="/usr/share/X11/xorg.conf.d/"
    
    if [ -d "$target_path" ]; then
        cp ${PATH_CONF}/99-fbdev.conf $target_path
    fi
    
    if [ -d "$target_path" ]; then
        cp ${PATH_CONF}/10-evdev.conf $target_path/45-evdev.conf
    fi

    set_rotate 270
}


remove() {
    _disable_modules
    _disable_dtbo
    _remove_desktop
    _delete_flag
}

if [[ $EUID -ne 0 ]]; then
    echo -e "\n\tError:  please run as root!\n"
    exit 1
fi





FUNCTION_NAME=$2
ARGUMENT=$3
$FUNCTION_NAME $ARGUMENT

if [[ $? -ne 0 ]]; then
    exit 1
fi
echo -e "\033[32m[ok]\033[0m"
echo -e "\n\tplease reboot\n"